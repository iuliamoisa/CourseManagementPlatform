{
	"info": {
		"_postman_id": "c5766419-e60e-4644-9974-d38420d6c815",
		"name": "Final",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34376653",
		"_collection_link": "https://proiect-ing.postman.co/workspace/Proiect-ING-Workspace~29f377ad-1a18-4760-8118-a8c01de7b092/collection/34376653-c5766419-e60e-4644-9974-d38420d6c815?action=share&source=collection_link&creator=34376653"
	},
	"item": [
		{
			"name": "Enrollment",
			"item": [
				{
					"name": "[STUDENT] Create Enrollment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"courseId\": \"{{courseId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/enrollments/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"enrollments",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Update Enrollment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    // \"status\" : \"{{enrollmentStatus}}\",\r\n    \"gpa\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/enrollments/update/{{enrollmentId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"enrollments",
								"update",
								"{{enrollmentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[STUDENT] Delete Enrollment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/enrollments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"enrollments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "[STUDENT} Get my enrollments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/enrollments/current",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"enrollments",
								"current"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Get all enrollments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/enrollments/prof/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"enrollments",
								"prof",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Get all enrollments by STUDENT_ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/enrollments/prof/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"enrollments",
								"prof",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Get all enrollments by course ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/enrollments/prof/course/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"enrollments",
								"prof",
								"course",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Set gpa",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/enrollments/prof/setGpa/{{enrollmentId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"enrollments",
								"prof",
								"setGpa",
								"{{enrollmentId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "[PROF] Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/user/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"all"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "[PROF] Get user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/user/id/{{id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"id",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Get users by role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/user/all/student",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"all",
								"student"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ALL] Register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Request body:\", pm.request.body.raw);",
									"console.log(\"Response status:\", pm.response.code);",
									"console.log(\"Response body:\", pm.response.text());",
									"",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"userId\", jsonData.id);",
									"pm.globals.get(\"variable_key\");",
									"console.log(\"Set userId:\", pm.collectionVariables.get(\"userId\"));",
									"console.log(pm.collectionVariables.get(\"userId\"));",
									"",
									"",
									"const requestBody = JSON.parse(pm.request.body.raw);",
									"pm.collectionVariables.set(\"userEmail\", requestBody.email);",
									"pm.collectionVariables.set(\"userPassword\", requestBody.password);",
									"console.log(\"Set userEmail:\", pm.collectionVariables.get(\"userEmail\"));",
									"console.log(\"Set userPassword:\", pm.collectionVariables.get(\"userPassword\"));",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@example.com\",\n    \"password\": \"parolanoua\",\n    \"firstName\": \"admin\",\n    \"lastName\": \"adminadmin\",\n    \"userRole\": \"ADMIN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/user/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"create"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "[PROF] Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/user/delete/{{id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"delete",
								"{{id}}"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "[ALL] Update user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userRole\" : \"PROFESSOR\",\r\n    \"lastName\": \"admi\"\r\n    // \"email\" : \"emailUserDto\",\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/user/102",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"102"
							]
						}
					},
					"response": []
				},
				{
					"name": "JWT AUTH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jwt = pm.response.text();\r",
									"pm.collectionVariables.set(\"Authorization\", \"Bearer \" + jwt);\r",
									"console.log(pm.collectionVariables.get(\"Authorization\"));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false,
						"protocolVersion": "http1"
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"username\" : \"{{userEmail}}\",\r\n//     \"password\" : \"{{userPassword}}\"\r\n// }\r\n{\r\n    \"username\" : \"{{userEmail}}\",\r\n    \"password\" : \"{{userPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/authenticate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"authenticate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Course",
			"item": [
				{
					"name": "[ALL] Get all courses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/courses/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"courses",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Add course",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"History 101\",\r\n    \"description\": \"Intro to History\",\r\n    \"maxAttendees\": {{maxAtt}},\r\n    \"professorId\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/courses/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"courses",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Get course by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/courses/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"courses",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Update course",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"maxAttendees\":40\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/courses/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"courses",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get professor's courses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/courses/professor/{{profId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"courses",
								"professor",
								"{{profId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[RPOF] Delete Course",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/courses/delete/15",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"courses",
								"delete",
								"15"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Class_Activity",
			"item": [
				{
					"name": "[PROF] Create activity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"attendanceStatus\" : \"{{attendanceStatus}}\",\r\n    \"grade\" : {{doubleGrade}},\r\n    \"scheduleId\" : {{scheduleId}},\r\n    \"userId\" : {{userId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/class-activity",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"class-activity"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Update activity",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"grade\" : 7.24,\r\n    \"attendanceStatus\" : \"PRESENT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/class-activity/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"class-activity",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Delete activity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/class-activity/9",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"class-activity",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "[STUD] Get all activities for a course",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/class-activity/activity/all?courseId={{courseIdToGetGrades}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"class-activity",
								"activity",
								"all"
							],
							"query": [
								{
									"key": "courseId",
									"value": "{{courseIdToGetGrades}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Schedule",
			"item": [
				{
					"name": "[PROF] Add item to schedule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"courseType\": \"{{courseType}}\",          \r\n    \"courseId\": {{courseId}},                    \r\n    // \"startDate\": \"2024-10-11\", \r\n    // \"endDate\": \"2025-01-19\",   \r\n    \"startDate\": \"{{startDate}}\", \r\n    \"endDate\": \"{{endDate}}\",   \r\n    \"weekDay\": \"{{weekDay}}\", \r\n    \"startTime\": \"{{startTime}}\", \r\n    \"endTime\": \"{{endTime}}\"                    \r\n    // \"startTime\": \"16:00:00\", \r\n    // \"endTime\": \"18:00:00\"   \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/schedule",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"schedule"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ALL] Get all schedules",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/schedule/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"schedule",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "[ALL] Get schedule for a course",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/schedule/course/{{courseId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"schedule",
								"course",
								"{{courseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Delete item from schedule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/schedule/delete/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"schedule",
								"delete",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "[PROF] Update schedule",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"weekDay\": \"SATURDAY\",\r\n        \"startTime\": \"14:30:00\",\r\n        \"endTime\": \"16:00:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/schedule/update/9",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"schedule",
								"update",
								"9"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userId",
			"value": "26"
		},
		{
			"key": "userEmail",
			"value": ""
		},
		{
			"key": "userPassword",
			"value": ""
		},
		{
			"key": "Authorization",
			"value": ""
		},
		{
			"key": "existentUserEmail",
			"value": "test@test.com",
			"type": "string",
			"disabled": true
		},
		{
			"key": "existentUserPassword",
			"value": "parolanoua",
			"type": "string",
			"disabled": true
		},
		{
			"key": "courseId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "enrollmentId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "attendanceStatus",
			"value": "ABSENT",
			"type": "string"
		},
		{
			"key": "doubleGrade",
			"value": "5.0",
			"type": "string"
		},
		{
			"key": "scheduleId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "enrollmentStatus",
			"value": "DECLINED",
			"type": "string"
		}
	]
}